{"ast":null,"code":"import _defineProperty from \"/Users/sinker/Desktop/github/react_redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst _state = {\n  isLogin: false,\n  userInfo: {\n    nickName: '',\n    memberMobile: ''\n  },\n  addressArray: [],\n  address: {}\n};\n\nconst userReducer = (state = _state, action = {}) => {\n  switch (action.type) {\n    case 'SET_LOGIN':\n      return _objectSpread({}, state, {\n        isLogin: action.state\n      });\n\n    case 'SET_USERINFO':\n      return _objectSpread({}, state, {\n        userInfo: action.state\n      });\n\n    case 'SET_ADDRESS':\n      return _objectSpread({}, state, {\n        address: action.state\n      });\n\n    case 'SET_ADDRESSARRAY':\n      return _objectSpread({}, state, {\n        addressArray: action.state\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport function setLogin(state) {\n  return {\n    type: \"SET_LOGIN\",\n    payload: state\n  };\n}\nexport function setUserInfo(state) {\n  return {\n    type: \"SET_USERINFO\",\n    payload: state\n  };\n}\nexport function setAddress(state) {\n  return {\n    type: \"SET_ADDRESS\",\n    payload: state\n  };\n}\nexport function setAddressArray(state) {\n  return {\n    type: \"SET_ADDRESSARRAY\",\n    payload: state\n  };\n}\nexport default userReducer;","map":{"version":3,"sources":["/Users/sinker/Desktop/github/react_redux/src/store/user/index.js"],"names":["_state","isLogin","userInfo","nickName","memberMobile","addressArray","address","userReducer","state","action","type","setLogin","payload","setUserInfo","setAddress","setAddressArray"],"mappings":";;;;;;AAAA,MAAMA,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,KADI;AAEbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,YAAY,EAAE;AAFN,GAFG;AAMbC,EAAAA,YAAY,EAAE,EAND;AAObC,EAAAA,OAAO,EAAE;AAPI,CAAf;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,MAAT,EAAiBS,MAAM,GAAG,EAA1B,KAAiC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,+BAAaF,KAAb;AAAoBP,QAAAA,OAAO,EAAEQ,MAAM,CAACD;AAApC;;AACF,SAAK,cAAL;AACE,+BAAaA,KAAb;AAAoBN,QAAAA,QAAQ,EAAEO,MAAM,CAACD;AAArC;;AACF,SAAK,aAAL;AACE,+BAAaA,KAAb;AAAoBF,QAAAA,OAAO,EAAEG,MAAM,CAACD;AAApC;;AACF,SAAK,kBAAL;AACE,+BAAaA,KAAb;AAAoBH,QAAAA,YAAY,EAAEI,MAAM,CAACD;AAAzC;;AACF;AACE,aAAOA,KAAP;AAVJ;AAYD,CAbD;;AAeA,OAAO,SAASG,QAAT,CAAmBH,KAAnB,EAA0B;AAC/B,SAAO;AACLE,IAAAA,IAAI,EAAE,WADD;AAELE,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID;AAED,OAAO,SAASK,WAAT,CAAsBL,KAAtB,EAA6B;AAClC,SAAO;AACLE,IAAAA,IAAI,EAAE,cADD;AAELE,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID;AAED,OAAO,SAASM,UAAT,CAAqBN,KAArB,EAA4B;AACjC,SAAO;AACLE,IAAAA,IAAI,EAAE,aADD;AAELE,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID;AAED,OAAO,SAASO,eAAT,CAA0BP,KAA1B,EAAiC;AACtC,SAAO;AACLE,IAAAA,IAAI,EAAE,kBADD;AAELE,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID;AAED,eAAeD,WAAf","sourcesContent":["const _state = {\n  isLogin: false,\n  userInfo: {\n    nickName: '',\n    memberMobile: ''\n  },\n  addressArray: [],\n  address: {}\n}\n\nconst userReducer = (state = _state, action = {}) => {\n  switch (action.type) {\n    case 'SET_LOGIN':\n      return {  ...state, isLogin: action.state }\n    case 'SET_USERINFO':\n      return {  ...state, userInfo: action.state }\n    case 'SET_ADDRESS':\n      return {  ...state, address: action.state }\n    case 'SET_ADDRESSARRAY':\n      return {  ...state, addressArray: action.state }\n    default:\n      return state\n  }\n}\n\nexport function setLogin (state) {\n  return {\n    type: \"SET_LOGIN\",\n    payload: state\n  }\n}\n\nexport function setUserInfo (state) {\n  return {\n    type: \"SET_USERINFO\",\n    payload: state\n  }\n}\n\nexport function setAddress (state) {\n  return {\n    type: \"SET_ADDRESS\",\n    payload: state\n  }\n}\n\nexport function setAddressArray (state) {\n  return {\n    type: \"SET_ADDRESSARRAY\",\n    payload: state\n  }\n}\n\nexport default userReducer"]},"metadata":{},"sourceType":"module"}